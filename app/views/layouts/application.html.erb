<!DOCTYPE html>
<html>
  <head>
    <title>DocSync</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>

    <!-- Cargar los scripts de FullCalendar desde el CDN -->
    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.15/index.global.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@6.1.15/index.global.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/interaction@6.1.15/index.global.min.js"></script>

    <style>
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      body {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
      }
      main {
        flex: 1 1 auto;
        display: flex;
        flex-direction: column;
        padding: 0.5rem;
      }
      .navbar {
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
      }
      .navbar-brand {
        font-weight: bold;
      }
      .appointments-container {
        padding: 0.5rem 2rem;
        flex: 1 1 auto;
        display: flex;
        flex-direction: column;
      }
    </style>
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-light">
      <div class="container-fluid">
        <%= link_to "DocSync", root_path, class: "navbar-brand" %>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <% if user_signed_in? %>
              <% role = current_user.role || "admin" %>
              <% admin_routes = [
                  { name: "Dashboard", path: admin_dashboards_path, controller: "admin/dashboards" },
                  { name: "Appointments", path: appointments_path, controller: "appointments" },
                  { name: "Patients", path: patients_path, controller: "patients" },
                  { name: "Clinics", path: clinics_path, controller: "clinics" },
                  { name: "Professionals", path: professionals_path, controller: "professionals" },
                  { name: "Secretaries", path: secretaries_path, controller: "secretaries" }
                ] %>
              <% professional_routes = [
                  { name: "Appointments", path: appointments_path, controller: "appointments" },
                  { name: "Patients", path: patients_path, controller: "patients" }
                ] %>
              <% secretary_routes = [
                  { name: "Appointments", path: appointments_path, controller: "appointments" },
                  { name: "Patients", path: patients_path, controller: "patients" },
                  { name: "Clinics", path: clinics_path, controller: "clinics" }
                ] %>
              <% available_routes = case role
                                   when "admin" then admin_routes
                                   when "professional" then professional_routes
                                   when "secretary" then secretary_routes
                                   else []
                                   end %>
              <% available_routes.each do |route| %>
                <% unless controller_name == route[:controller].split("/").last %>
                  <li class="nav-item">
                    <%= link_to route[:name], route[:path], class: "nav-link" %>
                  </li>
                <% end %>
              <% end %>
            <% end %>
          </ul>
          <% if user_signed_in? %>
            <div class="navbar-text me-3">
              Logged in as <%= current_user.name %>
            </div>
            <%= link_to "Log out", destroy_user_session_path, method: :delete, class: "btn btn-outline-danger" %>
          <% else %>
            <%= link_to "Log in", new_user_session_path, class: "btn btn-primary" %>
          <% end %>
        </div>
      </div>
    </nav>

    <main>
      <% if notice %>
        <div class="alert alert-success alert-dismissible fade show" role="alert">
          <%= notice %>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      <% end %>
      <% if alert %>
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
          <%= alert %>
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      <% end %>
      <%= yield %>
    </main>

    <!-- Mover el script de inicialización al final del body para asegurar que FullCalendar esté cargado -->
    <script>
      console.log('calendar.js cargado'); // Mensaje de depuración

      // Verificar que FullCalendar esté disponible
      if (typeof FullCalendar === 'undefined') {
        console.error('FullCalendar no está definido. Asegúrate de que los scripts de FullCalendar se carguen correctamente.');
      } else {
        console.log('FullCalendar está disponible');
      }

      // Definir la función initializeCalendar
      window.initializeCalendar = function() {
        var calendarEl = document.getElementById('calendar');
        if (calendarEl) {
          console.log('Inicializando FullCalendar...');
          var calendar = new FullCalendar.Calendar(calendarEl, {
            plugins: ['dayGrid', 'interaction'],
            initialView: 'dayGridMonth',
            events: '/appointments.json',
            editable: true,
            selectable: true,
            eventClick: function(info) {
              window.location.href = '/appointments/' + info.event.id;
            },
            eventDrop: function(info) {
              fetch('/appointments/' + info.event.id, {
                method: 'PATCH',
                headers: {
                  'Content-Type': 'application/json',
                  'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
                },
                body: JSON.stringify({
                  date: info.event.start.toISOString().split('T')[0],
                  time: info.event.start.toTimeString().split(' ')[0]
                })
              }).then(response => {
                if (!response.ok) {
                  alert('Error al actualizar el turno. Intenta de nuevo.');
                  calendar.refetchEvents();
                }
              });
            },
            select: function(info) {
              window.location.href = '/appointments/new?date=' + info.startStr;
            },
            eventContent: function(arg) {
              return { html: `<b>${arg.event.title}</b>` };
            },
            eventDidMount: function(info) {
              console.log('Evento cargado:', info.event);
              if (new Date(info.event.start) < new Date()) {
                info.el.style.backgroundColor = '#d3d3d3';
              }
            },
            height: '100%',
            contentHeight: 'auto',
            expandRows: true
          });
          calendar.render();
          console.log('FullCalendar renderizado');
        } else {
          console.error('No se encontró el elemento #calendar');
        }
      };

      // Ejecutar la inicialización en DOMContentLoaded y turbo:load
      document.addEventListener('DOMContentLoaded', window.initializeCalendar);
      document.addEventListener('turbo:load', window.initializeCalendar);

      console.log('window.initializeCalendar definido'); // Mensaje de depuración
    </script>
  </body>
</html>